name: Laravel CI/CD

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.3'

    - name: Install dependencies
      run: |
        composer install --prefer-dist --no-ansi --no-interaction --no-progress --no-scripts

    - name: Copy environment file
      run: cp .env.example .env

    - name: Generate application key
      run: php artisan key:generate

  test:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.3'

    - name: Install dependencies
      run: |
        composer install --prefer-dist --no-ansi --no-interaction --no-progress --no-scripts
        composer require --dev phpunit/phpunit
        composer require --dev roave/security-advisories:dev-latest

    - name: Copy environment file
      run: cp .env.example .env

    - name: Generate application key
      run: php artisan key:generate

    - name: Run tests with code coverage
      run: php vendor/bin/phpunit --coverage-text --coverage-html=coverage

    - name: Upload code coverage report
      uses: actions/upload-artifact@v2
      with:
        name: coverage
        path: coverage/

  publish:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    
    - name: Set up Docker Buildx (optional, but recommended for multi-platform builds)
      uses: docker/setup-buildx-action@v1

    - name: Log in to Docker Hub
      run: echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin
      
    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: rikku18/a3-ppl:latest
        
  deploy:
    runs-on: ubuntu-latest
    needs: publish
  
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
  
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Stop and Remove Docker Containers
        run: |
          for container_id in $(docker ps -aq); do
            docker stop $container_id
            docker rm $container_id
          done
          
      - name: Deploy with Docker on GCP VM
        run: |
          ssh -o StrictHostKeyChecking=no rikzakurnia1802@35.209.237.120 "docker pull rikku18/a3-ppl:latest && docker run -d -p 80:80 rikku18/a3-ppl:latest"
